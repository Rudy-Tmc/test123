jira.Automation proj_prop_Automation_rule_test_environment@susss {
  name = "proj prop"
  state = "ENABLED"
  description = ""
  authorAccountId = {
    id = "557058:fbbb56de-c97c-4b68-8216-2e193b8dffdc"
    displayName = "Rudy Holtkamp"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 1
    type = "jira.jql.scheduled"
    value = {
      schedule = {
        cronExpression = ""
        method = "BASIC"
        rate = 0
        rateInterval = 86400
        rRule = '''
BEGIN:VEVENT
DTSTART;TZID=Europe/Amsterdam:20230713T144541
RRULE:FREQ=WEEKLY;BYHOUR=9;BYMINUTE=0;BYSECOND=0;BYDAY=TH;INTERVAL=1200
END:VEVENT

'''
      }
      jql = "${ jira.Field.instance.Key.name } = ARTE-70"
      executionMode = "jql"
      onlyUpdatedIssues = false
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "ACTION"
      schemaVersion = 3
      type = "jira.set.entity.property"
      value = {
        entityType = "ISSUE"
        key = "rudy_xuy"
        value = "breg"
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{issue.${ jira.Field.instance.Project__project }.properties}}"
    },
    {
      component = "BRANCH"
      schemaVersion = 1
      type = "jira.smart.values.branch"
      value = {
        id = "_customsmartvalue_id_1689252467743"
        name = {
          type = "FREE"
          value = "property"
        }
        type = "SMART"
        query = {
          type = "SMART"
          value = "{{issue.project.properties.split(\", \")}}"
        }
        lazy = false
      }
      children = [
        {
          component = "ACTION"
          schemaVersion = 1
          type = "codebarrel.action.log"
          children = [
          ]
          conditions = [
          ]
          rawValue = "P: {{property}}"
        },
        {
          component = "CONDITION"
          schemaVersion = 1
          type = "jira.comparator.condition"
          value = {
            first = "{{property}}"
            second = "rudy"
            operator = "CONTAINS"
          }
          children = [
          ]
          conditions = [
          ]
        },
        {
          component = "ACTION"
          schemaVersion = 1
          type = "codebarrel.action.log"
          children = [
          ]
          conditions = [
          ]
          rawValue = "P: {{property}} =="
        },
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.Automation_rule_test_environment@s
    },
  ]
  labels = [
  ]
  tags = [
    {
      tagType = "IS_RULE_UPDATED"
      tagValue = "true"
    },
  ]
  ruleHome = {
    
    ruleBillingHome = {
      locationARI = "ari:cloud:jira-software::site/a2ab9907-a2ed-48fe-9138-15c0301eaee1"
    }
    ruleLifecycleHome = {
      locationARI = "ari:cloud:jira:a2ab9907-a2ed-48fe-9138-15c0301eaee1:project/10012"
    }
  }
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "proj prop"
}
