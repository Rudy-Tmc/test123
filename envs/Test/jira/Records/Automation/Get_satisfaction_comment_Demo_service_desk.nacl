jira.Automation Get_satisfaction_comment_Demo_service_desk@ssuss {
  name = "Get satisfaction comment"
  state = "DISABLED"
  authorAccountId = {
    id = "557058:fbbb56de-c97c-4b68-8216-2e193b8dffdc"
    displayName = "Rudy Holtkamp"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 2
    type = "jira.issue.field.changed"
    value = {
      changeType = "ANY_CHANGE"
      fields = [
        {
          value = jira.Field.instance.Satisfaction_date__sd_request_feedback_date__c@suubbbuu
          type = "field"
        },
      ]
      actions = [
      ]
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{issue.${ jira.Field.instance.Satisfaction_date__sd_request_feedback_date__c@suubbbuu.name }.substringBefore(\"T\")}}"
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "jira.issue.outgoing.webhook"
      value = {
        url = "https://rudy.atlassian.net/rest/servicedesk/1/projects/{{issue.${ jira.Field.instance.Project__project }.key}}/report/feedback/date-range?start=1&limit=100&expand=overall&startDate={{issue.${ jira.Field.instance.Satisfaction_date__sd_request_feedback_date__c@suubbbuu.name }.substringBefore(\"T\")}}&endDate={{issue.${ jira.Field.instance.Satisfaction_date__sd_request_feedback_date__c@suubbbuu.name }.substringBefore(\"T\")}}"
        headers = [
          {
            id = "_header_1591097775141"
            name = "Content-Type"
            value = "application/json"
            headerSecure = false
          },
          {
            id = "_header_1591097820568"
            name = "Authorization"
            value = "Basic cnVkeS5ob2x0a2FtcEB0bWMubmw6aWVWWXdkU2dZRzNWYXVJNnZqY1Q3QTAw"
            headerSecure = false
          },
        ]
        sendIssue = false
        contentType = "empty"
        method = "GET"
        responseEnabled = true
        continueOnErrorEnabled = false
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{webhookResponse.status}}"
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{webhookResponse.body}}"
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{webhookResponse.body.pagedResults.results}}"
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{#webhookResponse.body.pagedResults.results}}{{feedbackDate}}{{/}}"
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "{{webhookResponse.body.pagedResults.results.first.comment}}"
    },
    {
      component = "ACTION"
      schemaVersion = 10
      type = "jira.issue.edit"
      value = {
        operations = [
          {
            field = {
              type = "ID"
              value = jira.Field.instance.Satisfaction_comment__textarea__c@suuuu
            }
            fieldType = "com.atlassian.jira.plugin.system.customfieldtypes:textarea"
            type = "SET"
            rawValue = "{{webhookResponse.body.pagedResults.results.first.comment}}"
          },
        ]
        sendNotifications = true
      }
      children = [
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.Demo_service_desk@s
    },
  ]
  labels = [
  ]
  tags = [
  ]
  ruleHome = {
    
    ruleBillingHome = {
      locationARI = "ari:cloud:jira-servicedesk::site/a2ab9907-a2ed-48fe-9138-15c0301eaee1"
    }
    ruleLifecycleHome = {
      locationARI = "ari:cloud:jira:a2ab9907-a2ed-48fe-9138-15c0301eaee1:project/10001"
    }
  }
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "Get satisfaction comment"
}
