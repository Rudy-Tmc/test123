jira.Automation Due_in_3__12__24_hours__Alpha@sszdszdsssu {
  name = "Due in 3, 12, 24 hours "
  state = "ENABLED"
  description = ""
  authorAccountId = {
    id = "557058:fbbb56de-c97c-4b68-8216-2e193b8dffdc"
    displayName = "Rudy Holtkamp"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 1
    type = "jira.jql.scheduled"
    value = {
      schedule = {
        cronExpression = ""
        method = "BASIC"
        rate = 0
        rateInterval = 86400
        rRule = '''
BEGIN:VEVENT
DTSTART;TZID=Europe/Amsterdam:20231010T125549
RRULE:FREQ=MINUTELY;INTERVAL=30;BYSECOND=0
END:VEVENT

'''
      }
      jql = "\"${ jira.Field.instance.End_Date__Gantt___datetime__c@sshiuuuu.name }[Time stamp]\" > 0m "
      executionMode = "jql"
      onlyUpdatedIssues = false
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      schemaVersion = 1
      type = "jira.condition.container.block"
      children = [
        {
          component = "CONDITION_BLOCK"
          schemaVersion = 1
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              schemaVersion = 1
              type = "codebarrel.action.log"
              children = [
              ]
              conditions = [
              ]
              rawValue = "between now and 3 hours"
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now}}"
                operator = "GREATER_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now.plusHours(3)}}"
                operator = "LESS_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
        {
          component = "CONDITION_BLOCK"
          schemaVersion = 1
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              schemaVersion = 1
              type = "codebarrel.action.log"
              children = [
              ]
              conditions = [
              ]
              rawValue = "between now and 12 hours"
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now.plusHours(3)}}"
                operator = "GREATER_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now.plusHours(12)}}"
                operator = "LESS_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
        {
          component = "CONDITION_BLOCK"
          schemaVersion = 1
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              schemaVersion = 1
              type = "codebarrel.action.log"
              children = [
              ]
              conditions = [
              ]
              rawValue = "between now and 24 hours"
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now.plusHours(12)}}"
                operator = "GREATER_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
            {
              component = "CONDITION"
              schemaVersion = 1
              type = "jira.comparator.condition"
              value = {
                first = "{{issue.End Date [Gantt]}}"
                second = "{{now.plusHours(24)}}"
                operator = "LESS_THAN"
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.Alpha
    },
  ]
  labels = [
  ]
  tags = [
    {
      tagType = "IS_RULE_UPDATED"
      tagValue = "true"
    },
  ]
  ruleHome = {
    
    ruleBillingHome = {
      locationARI = "ari:cloud:jira-software::site/a2ab9907-a2ed-48fe-9138-15c0301eaee1"
    }
    ruleLifecycleHome = {
      locationARI = "ari:cloud:jira:a2ab9907-a2ed-48fe-9138-15c0301eaee1:project/10011"
    }
  }
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "Due in 3, 12, 24 hours "
}
