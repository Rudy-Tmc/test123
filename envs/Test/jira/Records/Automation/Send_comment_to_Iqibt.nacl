jira.Automation Send_comment_to_Iqibt@s {
  name = "Send comment to Iqibt"
  state = "DISABLED"
  authorAccountId = {
    id = "557058:fbbb56de-c97c-4b68-8216-2e193b8dffdc"
    displayName = "Rudy Holtkamp"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 1
    type = "jira.issue.event.trigger:commented"
    value = {
      eventKey = "jira:issue_updated"
      issueEvent = "issue_commented"
      eventTypes = [
      ]
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      schemaVersion = 1
      type = "jira.comparator.condition"
      value = {
        first = "{{${ jira.Field.instance.Comment__comments_page@uub }.internal}}"
        second = "false"
        operator = "EQUALS"
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "CONDITION"
      schemaVersion = 3
      type = "jira.issue.condition"
      value = {
        selectedField = {
          type = "NAME"
          value = jira.Field.instance.Supplier__select__c.name
        }
        selectedFieldType = "com.atlassian.jira.plugin.system.customfieldtypes:select"
        comparison = "EQUALS"
        compareFieldValue = {
          type = "NAME"
          value = "Iqibt"
          multiValue = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "CONDITION"
      schemaVersion = 3
      type = "jira.issue.condition"
      value = {
        selectedField = {
          type = "NAME"
          value = jira.Field.instance.External_reference__textfield__c@suuuu.name
        }
        selectedFieldType = "com.atlassian.jira.plugin.system.customfieldtypes:textfield"
        comparison = "NOT_EMPTY"
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "jira.create.variable"
      value = {
        id = "_customsmartvalue_id_1648197046482"
        name = {
          type = "FREE"
          value = "auth"
        }
        type = "SMART"
        query = {
          type = "SMART"
          value = "cnVkeWhvbHRrYW1wK3N1cHBsaWVyQGdtYWlsLmNvbTptc0x4RTJnMWhCT2I4cmx5bHZuSThDRDQ="
        }
        lazy = false
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      schemaVersion = 1
      type = "jira.issue.outgoing.webhook"
      value = {
        url = "https://sabaas-test.atlassian.net/rest/servicedeskapi/request/{{issue.fields.${ jira.Field.instance.External_reference__textfield__c@suuuu.name }}}/comment"
        headers = [
          {
            id = "_header_1648196786817"
            name = "Content-Type"
            value = "application/json"
            headerSecure = false
          },
          {
            id = "_header_1648197028216"
            name = "Authorization"
            value = "Basic {{auth}}"
            headerSecure = false
          },
        ]
        sendIssue = false
        contentType = "custom"
        customBody = '''
{
  "public": true,
  "body": "{{#jsonEncode}}{{${ jira.Field.instance.Comment__comments_page@uub }.body}}{{/}}"
}
'''
        method = "POST"
        responseEnabled = true
        continueOnErrorEnabled = false
      }
      children = [
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  labels = [
  ]
  tags = [
  ]
  ruleHome = {
    
    ruleBillingHome = {
      locationARI = "ari:cloud:jira-software::site/a2ab9907-a2ed-48fe-9138-15c0301eaee1"
    }
    ruleLifecycleHome = {
      locationARI = "ari:cloud:jira-software::site/a2ab9907-a2ed-48fe-9138-15c0301eaee1"
    }
  }
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "Send comment to Iqibt"
}
